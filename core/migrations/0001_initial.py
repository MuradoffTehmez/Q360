# Generated by Django 5.2.2 on 2025-06-09 22:07

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Departament',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=255, verbose_name='Departamentin Adı')),
            ],
        ),
        migrations.CreateModel(
            name='QiymetlendirmeDovru',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=255, verbose_name='Dövrün Adı (məs: 2025 Q1)')),
                ('bashlama_tarixi', models.DateField()),
                ('bitme_tarixi', models.DateField()),
                ('aktivdir', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Sektor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=255, verbose_name='Sektorun Adı')),
            ],
        ),
        migrations.CreateModel(
            name='SualKateqoriyasi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=255, verbose_name='Kompetensiya / Kateqoriya Adı')),
            ],
        ),
        migrations.CreateModel(
            name='Ishchi',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('rol', models.CharField(choices=[('SUPERADMIN', 'Superadmin'), ('ADMIN', 'Admin'), ('REHBER', 'Rəhbər'), ('ISHCHI', 'İşçi')], default='ISHCHI', max_length=10, verbose_name='İstifadəçi Rolu')),
                ('vezife', models.CharField(blank=True, max_length=255, verbose_name='Vəzifəsi')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('sektor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ishchiler', to='core.sektor')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Qiymetlendirme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('GOZLEMEDE', 'Gözləmədə'), ('TAMAMLANDI', 'Tamamlandı')], default='GOZLEMEDE', max_length=10)),
                ('qiymetlendiren', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='etdiyi_qiymetler', to=settings.AUTH_USER_MODEL)),
                ('qiymetlendirilen', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='verilen_qiymetler', to=settings.AUTH_USER_MODEL)),
                ('dovr', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.qiymetlendirmedovru')),
            ],
            options={
                'unique_together': {('dovr', 'qiymetlendirilen', 'qiymetlendiren')},
            },
        ),
        migrations.CreateModel(
            name='Shobe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ad', models.CharField(max_length=255, verbose_name='Şöbənin Adı')),
                ('departament', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='shobeler', to='core.departament')),
            ],
        ),
        migrations.AddField(
            model_name='sektor',
            name='shobe',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sektorler', to='core.shobe'),
        ),
        migrations.CreateModel(
            name='Sual',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('metn', models.TextField(verbose_name='Sualın Mətni')),
                ('departament', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.departament')),
                ('sektor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.sektor')),
                ('shobe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='core.shobe')),
                ('yaradan', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Sualı Yaradan')),
                ('kateqoriya', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.sualkateqoriyasi')),
            ],
        ),
        migrations.CreateModel(
            name='Cavab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xal', models.PositiveSmallIntegerField(verbose_name='Verilən Xal (1-10)')),
                ('metnli_rey', models.TextField(blank=True, null=True, verbose_name='Əlavə Rəy')),
                ('qiymetlendirme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cavablar', to='core.qiymetlendirme')),
                ('sual', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.sual')),
            ],
        ),
    ]

# .github/workflows/django.yml

name: Django CI

# Bu workflow-un nə zaman işə düşəcəyini təyin edir
on:
  push:
    branches: [ "main" ] # "main" branch-a edilən hər push zamanı
  pull_request:
    branches: [ "main" ] # "main" branch-a edilən hər pull request zamanı

jobs:
  build:
    runs-on: ubuntu-latest # Testlərin hansı əməliyyat sistemində işləyəcəyi
    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.11] # Hansı Python versiyası ilə test edilsin

    steps:
    - name: Kodu Kopyala (Checkout Code)
      uses: actions/checkout@v3

    - name: Python versiyasını qur (Set up Python ${{ matrix.python-version }})
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Sistem Asılılıqlarını Quraşdır (Install System Dependencies)
      run: |
        sudo apt-get update
        sudo apt-get install -y gettext libpango-1.0-0 libpangoft2-1.0-0

    - name: Python Asılılıqlarını Quraşdır (Install Dependencies)
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test üçün .env faylı yarat (Create .env file for testing)
      run: |
        echo "SECRET_KEY=${{ secrets.SECRET_KEY }}" > .env
        echo "DEBUG=False" >> .env
        echo "EMAIL_HOST_USER=${{ secrets.EMAIL_HOST_USER }}" >> .env
        echo "EMAIL_HOST_PASSWORD=${{ secrets.EMAIL_HOST_PASSWORD }}" >> .env
        echo "RECAPTCHA_SITE_KEY=${{ secrets.RECAPTCHA_SITE_KEY }}" >> .env
        echo "RECAPTCHA_SECRET_KEY=${{ secrets.RECAPTCHA_SECRET_KEY }}" >> .env

    - name: Miqrasiyaları Yoxla (Check Migrations)
      run: python manage.py makemigrations --check --dry-run
      
    - name: Testləri İşə Sal (Run Tests)
      run: |
        python manage.py test